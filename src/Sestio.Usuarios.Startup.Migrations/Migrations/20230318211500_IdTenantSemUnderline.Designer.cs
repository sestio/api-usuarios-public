// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sestio.Usuarios.Infra.EntityFramework;

#nullable disable

namespace Sestio.Usuarios.Startup.Migrations.Migrations
{
    [DbContext(typeof(UsuariosDbContext))]
    [Migration("20230318211500_IdTenantSemUnderline")]
    partial class IdTenantSemUnderline
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sestio.Usuarios.Domain.Sessoes.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("IdSessao")
                        .HasColumnType("uuid")
                        .HasColumnName("id_sessao");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("token_sessao", (string)null);
                });

            modelBuilder.Entity("Sestio.Usuarios.Domain.Sessoes.Entities.Sessao", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid")
                        .HasColumnName("id_usuario");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_validade");

                    b.HasKey("Id");

                    b.ToTable("sessao", (string)null);
                });

            modelBuilder.Entity("Sestio.Usuarios.Domain.Usuarios.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<Guid>("IdTenant")
                        .HasColumnType("uuid")
                        .HasColumnName("idtenant");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Sestio.Usuarios.Domain.Usuarios.Entities.Usuario", b =>
                {
                    b.OwnsOne("Sestio.Usuarios.Domain.Hashing.HashedPassword", "Senha", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("senha");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Senha")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
